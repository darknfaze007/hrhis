{% extends '::base.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/ext-all.js') }}"></script>
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/jquery.validate.js') }}"></script>
    <script type="text/javascript" src="{{ asset('commons/js/jquery-ui.js') }}"></script>
    <script type="text/javascript">
        $( ".date" ).datepicker( {
            changeMonth: true,
            changeYear: true,
            showOn: "both",
            buttonImage: "{{ asset('commons/images/calendar.gif') }}",
            buttonImageOnly: true,
            dateFormat: "dd/mm/yy",
            showAnim: "clip",
            maxDate: "+0D",
            yearRange:'c-60:c+60',
            onClose: function( selectedDate ) {
                $( ".enddate" ).datepicker( "option", "minDate", selectedDate );
            }
        });

        $( ".enddate" ).datepicker( {
            changeMonth: true,
            changeYear: true,
            showOn: "both",
            buttonImage: "{{ asset('commons/images/calendar.gif') }}",
            buttonImageOnly: true,
            dateFormat: "dd/mm/yy",
            showAnim: "clip",
            yearRange:'c-60:c+60'
        });

        $( document ).ready(function() {
            $("#hris_recordsbundle_historytype_enddate").parent().hide();
            $("#hris_recordsbundle_historytype_entitled_payment").parent().hide();
            var fields='#hris_recordsbundle_historytype_field';
            var fieldOptionNames='hris_recordsbundle_historytype_history';
            window.fieldOptionSection='#historyFieldSection';
            //var orgunitTransfer


            $.each([{id:{{ removeFields | join('},{id:') | raw }} }], function( removeFieldIndex, removeField ){
                $("#hris_recordsbundle_historytype_field option[value="+ removeField['id'] +"]").remove();
            });

            $(fields).on('change', function() {
                // Empty FieldOptionSection contents
                $( window.fieldOptionSection ).empty();

                //Automate filtering of option by field option relations
                var fieldOptionRelationUrl = "{{ path('api_field_show', { '_format': 'json'}) }}";
                // Getting get field option relations
                var getFields = $.getJSON( fieldOptionRelationUrl, function( jsonObject ) {
                    window.fieldOptionRelations=jsonObject;
                }).done(function(){
                    // Use it to trigger loading all field options when no related option is found
                    window.foundRelatedFields = 'false';
                    //Get uids of fields and field option from record to filtering related options

                    try {
                        window.recordValues = $.parseJSON( '{{ record.getValue() |json_encode() | replace({'\\r\\n': " "}) | replace({'\\r': " "}) | replace({'\\n': " "}) | raw }}' );
                    } catch (e) {
                        // error
                        $('#messageArea').html('<div class="alert alert-success" id="loadingMessage" style="color:#E92B2B;"><button type="button" class="close" data-dismiss="alert">Ã—</button><small><strong>Error Occurred!</strong> Malformed record or contains bad characters.</small></div>');
                        console.log(recordValues);
                        return;
                    }

                    var selectedField = $("#hris_recordsbundle_historytype_field").val();
                    $(window.fieldOptionSection).prepend('<select name="hris_recordsbundle_history[history]" id="hris_recordsbundle_history_history"> </select>');
                    $(window.fieldOptionSection).prepend('<label for="hris_recordsbundle_history_history">History</label>');
                    $.each( window.fieldOptionRelations, function( fieldKey, field ) {
                        //If selected field has related field options and record value for parent field has field options existing in relation the append on history type
                        if(field['child_fieldid']==selectedField && window.recordValues[field['parent_fielduid']]==field['parent_fieldoptionuid'] ) {
                            window.foundRelatedFields='true';//Prepare trigger to append all field options when no related option is found
                            $("#hris_recordsbundle_history_history").append(new Option(field['child_fieldoptionvalue'], field['child_fieldoptionuid']));
                        }
                    });

                    // Default to old way of appending fields options without considering relation
                    if(window.foundRelatedFields=='false') {
                        // Fetch fieldOptionTargets based on selected fields
                        var fieldOptionUrl = '{{ path('history_historyfieldption', {'_format':'json'}) }}';
                        postData = {
                            'fieldid': $('#hris_recordsbundle_historytype_field').val()
                        };
                        $.post(fieldOptionUrl,postData , function( fieldOptions ){
                            $(window.fieldOptionSection).find('option').remove();
                            if (jQuery.isEmptyObject(fieldOptions)){
                                $( window.fieldOptionSection ).empty();
                                $(window.fieldOptionSection).prepend('<h1><small>Field Has No Options</small></h1>');
                            }else {
                                // Loop accross the field options constructing history options
                                $.each(fieldOptions, function(historyFieldOptionIndex, historyFieldOption) {
                                    $("#hris_recordsbundle_history_history").append(new Option(historyFieldOption['name'], historyFieldOption['uid']));
                                });
                                check_if_is_leave();
                            }
                        });
                    }
                }).error(function(){
                });

            });
        });

        function check_if_is_leave(){
            $("#hris_recordsbundle_history_history").change(function(){
                var value = $("#hris_recordsbundle_history_history option:selected").text();
                var leave = value.toLowerCase();
                if(leave.indexOf("leave") > -1){
                    $("#hris_recordsbundle_historytype_enddate").parent().fadeIn();
                    $("#hris_recordsbundle_historytype_entitled_payment").parent().fadeIn();
                }else{
                    $("#hris_recordsbundle_historytype_enddate").parent().fadeOut();
                    $("#hris_recordsbundle_historytype_entitled_payment").parent().fadeOut();
                }
            })

        }
    </script>
{% endblock javascripts %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" media="all" href="{{ asset('commons/css/ext-standard.css') }}">
    <link rel="stylesheet" href="{{ asset('commons/css/datepicker.css') }}" />
    <link rel="stylesheet" href="{{ asset('commons/css/jquery-ui.css') }}" />
{% endblock stylesheets %}

{% block right_content -%}
    <h1><small>New History for {{ employeeName }}</small></h1>

    <form action="{{ path('history_create', {'recordid': recordid } ) }}" method="post" {{ form_enctype(form) }}>

    {{ form_row( form.field ) }}

    <div id="historyFieldSection">History<br/><br/></div>

    {{ form_row( form.startdate ) }}
    {{ form_row( form.enddate ) }}
    {{ form_row( form.entitled_payment ) }}
    {{ form_row( form.reason ) }}
    {{ form_row( form.updaterecord ) }}

    <ul class="record_actions inline" style="..." >
        <li>
            <button type="submit" class="btn">Create</button>
        </li>
        <li>
            <a href="{{ path('history_list_byrecord', { 'recordid': recordid }) }}" class="btn">
                Back to the list
            </a>
        </li>
    </ul>

    {{ form_end(form) }}

{% endblock %}
