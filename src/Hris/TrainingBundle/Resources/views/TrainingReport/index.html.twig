{% extends '::base.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/jquery.multi-select.js') }}"></script>
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/jquery.validate.js') }}"></script>
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/ext-all.js') }}"></script>
    <script type="text/javascript" src="{{ asset('commons/js/jquery-ui.js') }}"></script>
    <script type="text/javascript">
        var treeplaceholder="treeplaceholder";
        var inputboxname="hris_reportsbundle_reporthistorytrainingtype[organisationunit]";
        var urlExtension="";
        var selectedNode="";
        Ext.define('OrganisationUnitTreeModel2', {
            extend: 'Ext.data.Model',
            idProperty: 'id',
            fields: [{name: 'longname',type: 'string'},{name: 'id',type: 'int'},{ name: 'cls',type: 'string'},{name: 'leaf', type: 'boolean'}],
            validations: [{type: 'exclusion', field: 'cls',list: ['file','folder']}]
        });
        {#url: '{{ path('organisationunit_training_tree',{'_format':'json'}) }}'+urlExtension,#}
                Ext.onReady(function(){
            var OrganisationUnitTreeStore2 = Ext.create('Ext.data.TreeStore', {
                storeId: 'MyJsonOrganisationUnitTreeStore2',
                model: 'OrganisationUnitTreeModel2',
                proxy: {
                    type: 'ajax',
                    url: '{{ path('organisationunit_tree',{'_format':'json'}) }}'+urlExtension,
                    reader: { type: 'json', root: 'organisationUnits'}
                },
                nodeParam: 'id',
                root: {longname: 'Orgunits', id: 'src', expanded: true},
                folderSort: true,
                sorters: [{property: 'longname', direction: 'ASC'}]
            });
            var OrganisationUnitTreePanel2 = Ext.create('Ext.tree.Panel', {
                id: 'organisationUnitTreePanel2',
                store: OrganisationUnitTreeStore2,
                displayField: 'longname',
                rootVisible: false,
                singleExpand: false,
                height: 250,
                viewConfig: {},
                renderTo: treeplaceholder,
                listeners: {
                    select: function(selModel2, record, index, options) {
                        var selectedOrgunits2 = selModel2.getSelection();
                        var selectedId2 = selectedOrgunits2[0].get('id');
                        $('input[name="'+inputboxname+'"]').val(selectedId2);
                    },
                    afterrender: function(treePanel,eOpts) {
                        if(selectedNode){
                            this.selectPath(selectedNode,'id','');
                        };
                    }
                }

            });
        });
        $( ".date" ).datepicker( {
            changeMonth: true,
            changeYear: true,
            showOn: "both",
            buttonImage: "{{ asset('commons/images/calendar.gif') }}",
            buttonImageOnly: true,
            dateFormat: "dd/mm/yy",
            showAnim: "clip",
            maxDate: "+0D",
            yearRange:'c-60:c+60'
        });
        $( document ).ready(function() {

            // validate signup form on keyup and submit
            $("#historytrainingForm").validate({ ignore:[] });
            var reportType='#hris_reportsbundle_reporthistorytrainingtype_reportType';
            var forms='#hris_reportsbundle_reporthistorytrainingtype_forms';
            var fields='#hris_reportsbundle_reporthistorytrainingtype_fields';
            var trainings='#hris_reportsbundle_reporthistorytrainingtype_Trainings';
            var startdate="#hris_reportsbundle_reporthistorytrainingtype_from";
            var enddate="#hris_reportsbundle_reporthistorytrainingtype_to";
            var graphTypeId='#hris_reportsbundle_reporthistorytrainingtype_graphType';
            var fieldsUrl = '{{ path('report_formfields',{'_format':'json'}) }}';
            var daterange = '#hris_reportsbundle_reporthistorytrainingtype_ProduceByDateRange';
            $(forms).multiSelect({
                selectableHeader: "<div class=''>Avaiable Forms</div>",
                selectionHeader: "<div class=''>Selected Forms</div>"
            });
            $(trainings).multiSelect({
                selectableHeader: "<div class=''>Avaiable Trainings</div>",
                selectionHeader: "<div class=''>Selected Trainings</div>"
            });

            // Disable fields and forms
            $(forms).attr('disabled', 'true');
            $(fields).attr('disabled', 'true');
            //Handles Years Selection
//            $(startdate).html(produceYears());
//            $(enddate).html(produceYears());
                window.selectedStart = 0;
                window.selectedEnd = 0;
            $(startdate).change(function(){
                window.selectedStart = $(this).val();
                if(window.selectedEnd!=0){
                    if(window.selectedStart>window.selectedEnd){
                        alert("Invalid Year Range:- (From: "+window.selectedStart+", To :"+window.selectedEnd+")");
                    }
                }
            });

            $(enddate).change(function(){
                window.selectedEnd = $(this).val();
                if(window.selectedStart!=0){
                    if(window.selectedStart>window.selectedEnd){
                        alert("Invalid Year Range:- (From: "+window.selectedEnd+", To :"+window.selectedStart+")");
                    }
                }
            });


            // On Selecting Report Type, enable Forms
            $(reportType).on('change', function() {
                // enable forms
                if( $(reportType).val() != '') {
                    $(forms).removeAttr('disabled');
                }else{
                    $(forms).attr('disabled', 'true');
                }
                if( $(reportType).val() == 'history' && $(forms).val() != '') {
                    $(fields).removeAttr('disabled');
                }else{
                    $(fields).attr('disabled', 'true');
                }
                if( $(reportType).val() == 'training' && $(forms).val() != '') {
                    $(startdate).removeAttr('disabled');
                    $(enddate).removeAttr('disabled');
                }else{
                }
            });

            //Change options of fields based on selected form
            $(forms).on('change', function() {
                if( $(reportType).val() == 'history'){
                    postData={
                        'formid': $(forms).val()
                    };
                    $.post(fieldsUrl,postData , function( fieldResults ){
                        $(fields).find('option').remove();
                        if (jQuery.isEmptyObject(fieldResults)){
                            $(fields).attr('disabled', 'true');
                        }else {
                            $(fields).removeAttr('disabled');
                            $.each(fieldResults, function(fieldResultsIndex, fieldResult) {
                                $(fields).append(new Option(fieldResult['name'], fieldResult['id']));
                            });
                        }
                    });
                }
            });
        });
    </script>
{% endblock javascripts %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" media="all" href="{{ asset('commons/css/multi-select.css') }}">
    <link rel="stylesheet" type="text/css" media="all" href="{{ asset('commons/css/ext-standard.css') }}">
    <link rel="stylesheet" href="{{ asset('commons/css/datepicker.css') }}" />
    <link rel="stylesheet" href="{{ asset('commons/css/jquery-ui.css') }}" />
{% endblock stylesheets %}

{% block right_content -%}
    <h1><small>Training Report</small></h1>

    {{ form_start(historytrainingForm, { 'method' : 'PUT','aTubecurosis Diagnosisttr': {'class':'historytrainingForm','id':'historytrainingForm'} } ) }}

    <div>
        {#{{ form_label( historytrainingForm.organisationunit ) }}#}
        <label>Training Location</label>
        <div id="treeplaceholder"></div>
        {{ form_errors( historytrainingForm.organisationunit ) }}
        {{ form_widget( historytrainingForm.organisationunit ) }}
    </div>
    <br/>
    {{ form_row( historytrainingForm.withLowerLevels ) }}
    {{ form_row( historytrainingForm.reportType ) }}
    {{ form_row( historytrainingForm.forms ) }}
    <div class="control-group">
        {{ form_label( historytrainingForm.forms,'Select Forms', {'label_attr': {'class': 'control-label'} } ) }}
        <div class="controls">
            {{ form_errors( historytrainingForm.forms ) }}
            {{ form_widget( historytrainingForm.forms ) }}
        </div>
    </div>

    {#{{ form_row( historytrainingForm.fields ) }}#}
    {{ form_row( historytrainingForm.graphType ) }}

    {{ form_end(historytrainingForm) }}


    <script>
        function produceYears(){
            var theBegining = 2008;
            var dates = new Date();
            var thisYear = dates.getFullYear();
            var opt = "<option disabled>-- select year --</option>";
            opt+= "<option value='2008'>2008</option>";
            for(var counter = 0;counter<(thisYear-theBegining);counter++){
                opt+= "<option value='"+(theBegining+counter+1)+"'>"+(theBegining+counter+1)+"</option>";
            }
            return opt;
        }
    </script>
{% endblock %}
